version: '3.4'

services:
  redis:
    image: redis:alpine
    ports:
      - "6378:6379"

  funzone.aggregator:
    image: ${DOCKER_REGISTRY-}funzoneaggregator
    build:
      context: .
      dockerfile: src/ApiGateways/Funzone.Aggregator/Dockerfile
    depends_on:
      - identityaccessapi
      - photoalbumsapi
  
  funzone.aggregator-dapr:
    image: "daprio/daprd:latest"
    command: [ "./daprd", 
    "-app-id", "funzone.aggregator", 
    "-app-port", "80",
    "-components-path", "/components",
    "-config", "/configuration/funzone-config.yaml"]
    depends_on:
      - funzone.aggregator
      - redis
    network_mode: "service:funzone.aggregator"
    volumes:
      - "./dapr/components/:/components"
      - "./dapr/configuration/:/configuration"

  identityaccessapi:
    image: ${DOCKER_REGISTRY-}funzoneidentityaccessapi
    build:
      context: .
      dockerfile: src/IdentityAccess/Funzone.IdentityAccess.Api/Dockerfile
  
  identityaccessapi-dapr:
    image: "daprio/daprd:latest"
    command: [ "./daprd",
    "-app-id", "identityaccessapi",
    "-app-port", "80",
    "-components-path", "/components",
    "-config", "/configuration/funzone-config.yaml"]
    depends_on:
      - identityaccessapi
      - redis
    network_mode: "service:identityaccessapi"
    volumes:
      - "./dapr/components/:/components"
      - "./dapr/configuration/:/configuration"

  photoalbumsapi:
    image: ${DOCKER_REGISTRY-}funzonephotoalbumsapi
    build:
      context: .
      dockerfile: src/PhotoAlbums/Funzone.PhotoAlbums.Api/Dockerfile

  photoalbumsapi-dapr:
    image: "daprio/daprd:latest"
    command: [ "./daprd",
    "-app-id", "photoalbumsapi",
    "-app-port", "80",
    "-components-path", "/components",
    "-config", "/configuration/funzone-config.yaml"]
    depends_on:
      - photoalbumsapi
      - redis
    network_mode: "service:photoalbumsapi"
    volumes:
      - "./dapr/components/:/components"
      - "./dapr/configuration/:/configuration"

